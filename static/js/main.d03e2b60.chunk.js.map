{"version":3,"sources":["../../src/firebaseConfig.js","../../src/components/auth.js","../../src/index.js","App.js","index.js"],"names":["firebaseConfig","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseConfigAuth","auth","authProvider","style","fetchAuthData","scopes","provider","onClick","result","error","window","alert","SocialSignIn","userCredentials","componentDidMount","this","render","props","React","SocialSignOut","SignOutHandler","App","useState","user","setUser","fetchUserData","userData","console","log","onSignOut","displayName","color","fontSize","borderRadius","backgroundColor","ReactDOM","document","getElementById"],"mappings":"4SAKA,IAUaA,EAAiBC,wBAVf,CACbC,OAAQC,0CACRC,WAAYD,0CACZE,YAAaF,iDACbG,UAAWH,0BACXI,cAAeJ,sCACfK,kBAAmBL,eACnBM,MAAON,8CAKIO,EAAN,OCZDC,EAAO,SAAC,GAAmD,IAC/D,EADcC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,cAAeC,EAAa,EAAbA,OAOlD,UACE,cACEC,EAAW,IAAIN,EAAfM,oBACA,MACF,aACEA,EAAW,IAAIN,EAAfM,mBACA,MACF,eACEA,EAAW,IAAIN,EAAfM,qBACA,MACF,aACEA,EAAW,IAAIN,EAAfM,mBACA,MACF,gBACEA,EAAW,IAAIN,EAAJ,cAAXM,iBACA,MACF,YACEA,EAAW,IAAIN,EAAJ,cAAXM,aACA,MACF,QACEA,OA+BJ,OACE,6BACE,4BAAQH,MAAR,EAAsBI,QA3BT,gBAEf,IAAIF,GACFA,WAAe,YACbC,iBAGJhB,kCAGQ,YACJc,EAAcI,EAAdJ,SAJJd,OAMS,YACL,kDAAImB,QACF,qBAAWC,QACTC,0IAKJP,EAAc,KAAdA,QAMF,gBAFJ,KCxDWQ,EAAb,0JACU,CAAEC,gBAAF,KAAyBJ,MAAO,MAD1C,eAGiB,YAMb,GACE,wBAA+B,QAA/B,uBAVN,gBAckB,cAKd,GACE,mCAEF,WAAc,CAAEI,gBAAF,EAAgCJ,MAAOA,KAtBzD,sDAyBEK,WAMExB,4BAAyCyB,KAAzCzB,eA/BJ,SAkCE0B,WAKE,OACE,qBACEb,MAAOY,KAAKE,MADd,MAEEf,aAAca,KAAKE,MAFrB,aAGEZ,OAAQU,KAAKE,MAHf,OAIEb,cAAeW,KAAKX,iBA5C5B,GAAkCc,IAAlC,WAkDaC,EAAb,mKACmB,WAEf7B,yBAGQ,WACJ,2BAJJA,OAMS,YACL,yBAVR,mCAcE0B,WACE,OACE,4BAAQb,MAAOY,KAAKE,MAApB,MAAiCV,QAASQ,KAAKK,gBADjD,aAfJ,GAAmCF,IAAnC,WCgBeG,MArEH,KAAO,MAAD,EACQC,mBAAS,MADjB,mBACTC,EADS,KACHC,EADG,KAIVC,EAAgB,CAACC,EAAUb,EAAiBJ,KAC5CA,GACFkB,QAAQlB,MAAMA,GAEhBkB,QAAQC,IAAIf,GACZW,EAAQE,IAIJG,EAAapB,IACZA,IACHkB,QAAQC,IAAI,cACZJ,EAAQ,QAIZ,OAAID,EAEA,6BACE,gCAAMA,EAAKO,YAAX,KACA,kBAAC,EAAD,CAAe3B,MAAO,CAAE4B,MAAO,OAASF,UAAWA,KAMvD,6BACE,iDACA,4CAEE,kBAAC,EAAD,CACE3B,aAAa,UACbC,MAAO,CAAE4B,MAAO,QAASC,SAAU,OAAQC,aAAc,OACzDR,cAAeA,IAEjB,kBAAC,EAAD,CACEvB,aAAa,SACbC,MAAO,CACL4B,MAAO,QACPG,gBAAiB,MACjBF,SAAU,OACVC,aAAc,OAEhB5B,OAAQ,CACN,mDACA,yCAEFoB,cAAeA,IAGjB,kBAAC,EAAD,CACEvB,aAAa,WACbC,MAAO,CAAE4B,MAAO,OAAQC,SAAU,OAAQC,aAAc,OACxDR,cAAeA,IAEjB,kBAAC,EAAD,CACEvB,aAAa,YACbC,MAAO,CAAE4B,MAAO,OAAQC,SAAU,OAAQC,aAAc,OACxDR,cAAeA,OC5DzBU,IAASnB,OAAO,kBAAC,EAAD,MAASoB,SAASC,eAAe,U","file":"static/js/main.d03e2b60.chunk.js","sourcesContent":["// firebase dependencies\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\n\n// firebase configuration from env\nconst config = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID\n}\n\nexport const firebaseConfig = firebase.initializeApp(config)\n\nexport const firebaseConfigAuth = firebase.auth\n","import React from 'react'\n\n// importing firebase configuration and dependencies\nimport { firebaseConfig, firebaseConfigAuth } from '../firebaseConfig'\n\nconst auth = ({ authProvider, style, fetchAuthData, scopes }) => {\n  let provider\n\n  /*\n  switch cases to initialize an instance of the provider(Twitter, Google, etc.)\n  object according to the authProvider prop passed from parent(SocialAuth) component\n  */\n  switch (authProvider) {\n    case 'Twitter':\n      provider = new firebaseConfigAuth.TwitterAuthProvider()\n      break\n    case 'Google':\n      provider = new firebaseConfigAuth.GoogleAuthProvider()\n      break\n    case 'Facebook':\n      provider = new firebaseConfigAuth.FacebookAuthProvider()\n      break\n    case 'Github':\n      provider = new firebaseConfigAuth.GithubAuthProvider()\n      break\n    case 'Microsoft':\n      provider = new firebaseConfigAuth.OAuthProvider('microsoft.com')\n      break\n    case 'Apple':\n      provider = new firebaseConfigAuth.OAuthProvider('apple.com')\n      break\n    default:\n      provider = null\n  }\n\n  /* \n  method to handle sign-in functionality with firebase\n  */\n  const onSignIn = () => {\n    // provider = scopes ? provider.addScope(scopes) : provider\n    if (scopes !== undefined) {\n      scopes.forEach((scope) => {\n        provider.addScope(scope)\n      })\n    }\n    firebaseConfig\n      .auth()\n      .signInWithPopup(provider)\n      .then((result) => {\n        fetchAuthData(result, null)\n      })\n      .catch((error) => {\n        if (error.code === 'auth/account-exists-with-different-credential') {\n          if (typeof window !== 'undefined') {\n            alert(\n              'An account already exists with the same email address. You have already signed up with a different auth provider for that email.'\n            )\n          }\n        }\n        fetchAuthData(null, error)\n      })\n  }\n\n  return (\n    <div>\n      <button style={style} onClick={onSignIn}>\n        Sign In with {authProvider}\n      </button>\n    </div>\n  )\n}\n\nexport default auth\n","import React from 'react'\n\n// importing firebase configuration and dependencies\nimport { firebaseConfig } from './firebaseConfig'\n\nimport Auth from './components/auth'\n\nexport class SocialSignIn extends React.Component {\n  state = { userCredentials: null, error: null }\n\n  authListener = (user) => {\n    /* \n  a method that sets the userData state when a user signs-in and \n  it also sends that data back to the parent component with the help \n  of fetchUserData prop \n  */\n    if (user) {\n      this.props.fetchUserData(user, this.state.userCredentials, null)\n    }\n  }\n\n  fetchAuthData = (credentials, error) => {\n    /* \n    a method to fetch user credentials(after successful sign-in) \n    from auth component \n  */\n    if (error) {\n      this.props.fetchUserData(null, null, error)\n    }\n    this.setState({ userCredentials: credentials, error: error })\n  }\n\n  componentDidMount() {\n    /* \n    activating the firebase authentication state observer, it listens \n    for changes in the authentication state and executes the function(or observer)\n    passed to it everytime the authentication state changes \n  */\n    firebaseConfig.auth().onAuthStateChanged(this.authListener)\n  }\n\n  render() {\n    /*\n    The Auth component is rendered that provides the sign-in facility. \n    Props coming down from the parent are passed to the Auth component.\n    */\n    return (\n      <Auth\n        style={this.props.style}\n        authProvider={this.props.authProvider}\n        scopes={this.props.scopes}\n        fetchAuthData={this.fetchAuthData}\n      />\n    )\n  }\n}\n\nexport class SocialSignOut extends React.Component {\n  SignOutHandler = () => {\n    // a method to sign users out\n    firebaseConfig\n      .auth()\n      .signOut()\n      .then(() => {\n        this.props.onSignOut(null)\n      })\n      .catch((error) => {\n        this.props.onSignOut(error)\n      })\n  }\n\n  render() {\n    return (\n      <button style={this.props.style} onClick={this.SignOutHandler}>\n        Sign Out\n      </button>\n    )\n  }\n}\n","import React, { useState } from 'react'\n\nimport { SocialSignIn, SocialSignOut } from 'react-easy-auth'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n\n  //a method to fetch the data after user signs-in\n  const fetchUserData = (userData, userCredentials, error) => {\n    if (error) {\n      console.error(error)\n    }\n    console.log(userCredentials)\n    setUser(userData)\n  }\n\n  // a method to handle user sign-out//\n  const onSignOut = (error) => {\n    if (!error) {\n      console.log('signed out')\n      setUser(null)\n    }\n  }\n\n  if (user) {\n    return (\n      <div>\n        <h3> {user.displayName} </h3>\n        <SocialSignOut style={{ color: 'red' }} onSignOut={onSignOut} />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1> Super Power App </h1>\n      <div>\n        Social Login\n        <SocialSignIn\n          authProvider='Twitter'\n          style={{ color: 'green', fontSize: '20px', borderRadius: '5px' }}\n          fetchUserData={fetchUserData}\n        />\n        <SocialSignIn\n          authProvider='Google'\n          style={{\n            color: 'white',\n            backgroundColor: 'red',\n            fontSize: '20px',\n            borderRadius: '5px'\n          }}\n          scopes={[\n            'https://www.googleapis.com/auth/androidpublisher',\n            'https://www.googleapis.com/auth/games'\n          ]}\n          fetchUserData={fetchUserData}\n          \n        />\n        <SocialSignIn\n          authProvider='Facebook'\n          style={{ color: 'blue', fontSize: '20px', borderRadius: '5px' }}\n          fetchUserData={fetchUserData}\n        />\n        <SocialSignIn\n          authProvider='Microsoft'\n          style={{ color: 'cyan', fontSize: '20px', borderRadius: '5px' }}\n          fetchUserData={fetchUserData}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}